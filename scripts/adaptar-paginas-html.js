#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üåê ADAPTANDO P√ÅGINAS HTML PARA MRS...\n');

let adaptacaoOk = true;

// Fun√ß√£o para fazer backup
function fazerBackup(arquivo, descricao) {
    try {
        const backupPath = arquivo + '.backup';
        if (!fs.existsSync(backupPath)) {
            fs.copyFileSync(arquivo, backupPath);
            console.log(`üì¶ Backup criado: ${descricao}`);
            return true;
        }
        return false;
    } catch (error) {
        console.log(`‚ùå Erro ao criar backup de ${descricao}: ${error.message}`);
        return false;
    }
}

// Fun√ß√£o para adaptar conte√∫do HTML
function adaptarConteudoHTML(conteudo) {
    return conteudo
        // T√≠tulos e refer√™ncias principais
        .replace(/PNSB/g, 'MRS')
        .replace(/Plano Nacional de Saneamento B√°sico/g, 'Manejo de Res√≠duos S√≥lidos')
        .replace(/MAP/g, 'MRS')
        .replace(/Manejo de √Åguas Pluviais/g, 'Manejo de Res√≠duos S√≥lidos')
        .replace(/Capacita√ß√£o em Manejo de √Åguas Pluviais/g, 'Capacita√ß√£o em Limpeza e Manejo de Res√≠duos S√≥lidos')
        
        // Refer√™ncias espec√≠ficas
        .replace(/curso-pnsb/g, 'curso-mrs')
        .replace(/curso_map/g, 'curso_mrs')
        .replace(/pesquisa nacional de saneamento b√°sico/gi, 'capacita√ß√£o em manejo de res√≠duos s√≥lidos')
        
        // Refer√™ncias de √°udio
        .replace(/Curso MAP - Mod/g, 'Curso MRS - Mod')
        .replace(/Curso PNSB - Mod/g, 'Curso MRS - Mod')
        
        // Portas do backend
        .replace(/localhost:3001/g, 'localhost:3002')
        .replace(/127\.0\.0\.1:3001/g, '127.0.0.1:3002');
}

// 1. Adaptar login.html
console.log('üîê Adaptando login.html:');
const loginPath = path.join('public', 'login.html');

if (fs.existsSync(loginPath)) {
    fazerBackup(loginPath, 'login.html');
    
    try {
        let conteudo = fs.readFileSync(loginPath, 'utf8');
        conteudo = adaptarConteudoHTML(conteudo);
        
        // Adapta√ß√µes espec√≠ficas para login.html
        conteudo = conteudo.replace(/<title>.*?<\/title>/, '<title>Login - Curso MRS</title>');
        
        fs.writeFileSync(loginPath, conteudo, 'utf8');
        console.log('‚úÖ login.html adaptado para MRS');
        
    } catch (error) {
        console.log(`‚ùå Erro ao adaptar login.html: ${error.message}`);
        adaptacaoOk = false;
    }
} else {
    console.log('‚ùå login.html n√£o encontrado!');
    adaptacaoOk = false;
}

// 2. Adaptar validate.html
console.log('\nüîç Adaptando validate.html:');
const validatePath = path.join('public', 'validate.html');

if (fs.existsSync(validatePath)) {
    fazerBackup(validatePath, 'validate.html');
    
    try {
        let conteudo = fs.readFileSync(validatePath, 'utf8');
        conteudo = adaptarConteudoHTML(conteudo);
        
        // Adapta√ß√µes espec√≠ficas para validate.html
        conteudo = conteudo.replace(/<title>.*?<\/title>/, '<title>Validar Certificado - Curso MRS</title>');
        
        fs.writeFileSync(validatePath, conteudo, 'utf8');
        console.log('‚úÖ validate.html adaptado para MRS');
        
    } catch (error) {
        console.log(`‚ùå Erro ao adaptar validate.html: ${error.message}`);
        adaptacaoOk = false;
    }
} else {
    console.log('‚ÑπÔ∏è  validate.html n√£o encontrado (pode ser normal)');
}

// 3. Corrigir index.html (remover refer√™ncia ao module8.js)
console.log('\nüìÑ Corrigindo index.html:');
const indexPath = path.join('public', 'index.html');

if (fs.existsSync(indexPath)) {
    try {
        let conteudo = fs.readFileSync(indexPath, 'utf8');
        
        // Remover refer√™ncia ao module8.js (MRS s√≥ tem 7 m√≥dulos)
        conteudo = conteudo.replace(/<script src="data\/module8\.js"><\/script>\s*/, '');
        
        // Corrigir t√≠tulo da topbar
        conteudo = conteudo.replace(
            /<div class="topbar-title">Pesquisa Nacional de Saneamento B√°sico<\/div>/,
            '<div class="topbar-title">Capacita√ß√£o em Manejo de Res√≠duos S√≥lidos</div>'
        );
        
        fs.writeFileSync(indexPath, conteudo, 'utf8');
        console.log('‚úÖ index.html corrigido (module8.js removido, t√≠tulo atualizado)');
        
    } catch (error) {
        console.log(`‚ùå Erro ao corrigir index.html: ${error.message}`);
        adaptacaoOk = false;
    }
} else {
    console.log('‚ùå index.html n√£o encontrado!');
    adaptacaoOk = false;
}

// 4. Verificar outras p√°ginas HTML
console.log('\nüìã Verificando outras p√°ginas HTML:');
const outrasPaginas = [
    { arquivo: 'public/admin.html', descricao: 'admin.html' },
    { arquivo: 'public/certificate-modal.html', descricao: 'certificate-modal.html' },
    { arquivo: 'public/teste.html', descricao: 'teste.html' },
    { arquivo: 'public/teste-player.html', descricao: 'teste-player.html' },
    { arquivo: 'public/test-progress.html', descricao: 'test-progress.html' }
];

outrasPaginas.forEach(({ arquivo, descricao }) => {
    if (fs.existsSync(arquivo)) {
        try {
            let conteudo = fs.readFileSync(arquivo, 'utf8');
            const conteudoOriginal = conteudo;
            conteudo = adaptarConteudoHTML(conteudo);
            
            if (conteudo !== conteudoOriginal) {
                fazerBackup(arquivo, descricao);
                fs.writeFileSync(arquivo, conteudo, 'utf8');
                console.log(`‚úÖ ${descricao} adaptado para MRS`);
            } else {
                console.log(`‚ÑπÔ∏è  ${descricao} j√° est√° adaptado ou n√£o precisa de altera√ß√µes`);
            }
            
        } catch (error) {
            console.log(`‚ùå Erro ao verificar ${descricao}: ${error.message}`);
        }
    } else {
        console.log(`‚ÑπÔ∏è  ${descricao} n√£o encontrado (pode ser normal)`);
    }
});

// Resultado final
console.log('\n' + '='.repeat(50));

if (adaptacaoOk) {
    console.log('üéâ P√ÅGINAS HTML ADAPTADAS COM SUCESSO!');
    console.log('‚úÖ login.html adaptado para MRS');
    console.log('‚úÖ validate.html adaptado para MRS');
    console.log('‚úÖ index.html corrigido (module8.js removido)');
    console.log('‚úÖ Outras p√°ginas verificadas e adaptadas');
    console.log('‚úÖ Backups criados para seguran√ßa');
    process.exit(0);
} else {
    console.log('‚ö†Ô∏è  ADAPTA√á√ÉO CONCLU√çDA COM ALGUNS PROBLEMAS!');
    console.log('‚ö†Ô∏è  Verifique os erros acima antes de continuar.');
    process.exit(1);
} 